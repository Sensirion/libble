apply plugin: 'com.android.library'
apply plugin: 'maven'

version = "2.1.7-SNAPSHOT"
def code = 37

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"
    testOptions {
        unitTests.returnDefaultValues = true
    }
    defaultConfig {
        archivesBaseName = 'libble'
        minSdkVersion 21
        targetSdkVersion 23
        versionCode code
        versionName version
    }
    buildTypes {
        release {
            minifyEnabled false
        }
    }
    libraryVariants.all { variant ->
        if (variant.buildType.name == 'release') {
            variant.outputs.each { output ->
                def outputFile = output.outputFile
                if (outputFile != null && outputFile.name.endsWith('.aar')) {
                    def fileName = "${archivesBaseName}-${version}.aar"
                    output.outputFile = new File(outputFile.parent, fileName)
                }
            }
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    testCompile 'org.powermock:powermock-api-mockito:1.6.1'
    testCompile 'org.powermock:powermock-module-junit4-rule-agent:1.6.1'
    testCompile 'org.powermock:powermock-module-junit4-rule:1.6.1'
    testCompile 'org.powermock:powermock-module-junit4:1.6.1'
    compile 'com.android.support:appcompat-v7:23.4.0'
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task writePom << {
    pom {
        artifactId = 'libble'
        project {
            inceptionYear '2014'
            packaging 'aar'
            licenses {
                license {
                    name 'BSD 3-Clause'
                    url 'http://opensource.org/licenses/BSD-3-Clause'
                    distribution 'repo'
                }
            }
        }
    }.writeTo("${buildDir}/libs/${project.archivesBaseName}-${project.version}.pom")
}

artifacts {
    archives sourcesJar
    archives javadocJar
}
